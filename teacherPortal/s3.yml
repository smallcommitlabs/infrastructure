# Infrastructure to support the teachers portal. This includes the website, user groups etc

AWSTemplateFormatVersion: 2010-09-09

Parameters: # params passed to "--parameter-overrides" in CLI
  BucketName:
    Description: Unique name for the bucket that will contain the static website. This will be in the S3 url to your React app.
    Type: String
  UserPoolName:
    Description: Unique name for the cognito user pool.
    Type: String

Resources:
  # Create an S3 Bucket that serves a static website (i.e. React app)
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: PublicRead # visitors need to be able to access the sie
      WebsiteConfiguration: # this makes the S3 Bucket a static website/app
        IndexDocument: index.html # default object served when visiting S3 domain
        ErrorDocument: index.html # just send to app, let React handle errors and routing

  # Add a Bucket Policy that lets public visitors access the web app
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket # attach to bucket being created
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement: # lets the public access/view the contents of your Bucket, i.e. web app
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*' # wildcard, allow all requests
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, /*]]
  
  # Cognito user pool for teachers
  TeacherCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref UserPoolName
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: True #Only admin is allowed to create users. (This supports the current behaviour that teachers cant sign themselves up)

  #
  TeacherUserPoolPortalAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref TeacherCognitoUserPool
      ClientName: !Join ['-', [!Ref UserPoolName, 'TeacherPortalApp']]
  
Outputs:
  WebsiteURL:
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Description: URL for website hosted on S3
  UserPoolID:
    Value: !Ref TeacherCognitoUserPool
    Description: ID for the user pool
  PortalAppClientID:
    Value: !Ref TeacherUserPoolPortalAppClient
    Description: ID for the client for the portal app for the teacher user pool